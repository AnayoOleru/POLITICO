'use strict';

var _require = require('pg'),
    Pool = _require.Pool;

var dotenv = require('dotenv');

dotenv.config();

var pool = new Pool({
  connectionString: process.env.DATABASE_URL
});

pool.on('connect', function () {
  console.log('database is connected now');
});

/**
 * Create user Tables
 */
var createOfficeTables = function createOfficeTables() {
  var queryText = 'CREATE TABLE IF NOT EXISTS\n      office(\n        id UUID PRIMARY KEY NOT NULL,\n        name VARCHAR(128) NOT NULL,\n        type VARCHAR(128) NOT NULL,\n        created_date TIMESTAMP\n      )';

  pool.query(queryText).then(function (res) {
    console.log(res);
    pool.end();
  }).catch(function (err) {
    console.log(err);
    pool.end();
  });
};

/**
 * Drop Tables
 */
var dropOfficeTables = function dropOfficeTables() {
  var queryText = 'DROP TABLE IF EXISTS office';
  pool.query(queryText).then(function (res) {
    console.log(res);
    pool.end();
  }).catch(function (err) {
    console.log(err);
    pool.end();
  });
};

pool.on('remove', function () {
  console.log('Table rcreation exited');
  process.exit(0);
});

module.exports = {
  createOfficeTables: createOfficeTables,
  dropOfficeTables: dropOfficeTables
};

require('make-runnable');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb250cm9sbGVycy9kYXRhYmFzZVRhYmxlcy9vZmZpY2VUYWJsZXMuanMiXSwibmFtZXMiOlsiUG9vbCIsInJlcXVpcmUiLCJkb3RlbnYiLCJwb29sIiwiY29ubmVjdGlvblN0cmluZyIsInByb2Nlc3MiLCJEQVRBQkFTRV9VUkwiLCJjb25zb2xlIiwiY3JlYXRlT2ZmaWNlVGFibGVzIiwicXVlcnlUZXh0IiwiZHJvcE9mZmljZVRhYmxlcyIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6Ijs7ZUFBaUJDLFFBQUFBLElBQUFBLEM7SUFBVEQsTyxTQUFBQSxJOztBQUNSLElBQU1FLFNBQVNELFFBQWYsUUFBZUEsQ0FBZjs7QUFFQUMsT0FBQUEsTUFBQUE7O0FBRUEsSUFBTUMsT0FBTyxJQUFBLElBQUEsQ0FBUztBQUNwQkMsb0JBQWtCQyxRQUFBQSxHQUFBQSxDQUFZQztBQURWLENBQVQsQ0FBYjs7QUFJQUgsS0FBQUEsRUFBQUEsQ0FBQUEsU0FBQUEsRUFBbUIsWUFBTTtBQUN2QkksVUFBQUEsR0FBQUEsQ0FBQUEsMkJBQUFBO0FBREZKLENBQUFBOztBQUlBOzs7QUFHQSxJQUFNSyxxQkFBcUIsU0FBckJBLGtCQUFxQixHQUFNO0FBQy9CLE1BQU1DLFlBQU4scU1BQUE7O0FBU0FOLE9BQUFBLEtBQUFBLENBQUFBLFNBQUFBLEVBQUFBLElBQUFBLENBQ1EsVUFBQSxHQUFBLEVBQVM7QUFDYkksWUFBQUEsR0FBQUEsQ0FBQUEsR0FBQUE7QUFDQUosU0FBQUEsR0FBQUE7QUFISkEsR0FBQUEsRUFBQUEsS0FBQUEsQ0FLUyxVQUFBLEdBQUEsRUFBUztBQUNkSSxZQUFBQSxHQUFBQSxDQUFBQSxHQUFBQTtBQUNBSixTQUFBQSxHQUFBQTtBQVBKQSxHQUFBQTtBQVZGLENBQUE7O0FBcUJBOzs7QUFHQSxJQUFNTyxtQkFBbUIsU0FBbkJBLGdCQUFtQixHQUFNO0FBQzdCLE1BQU1ELFlBQU4sNkJBQUE7QUFDQU4sT0FBQUEsS0FBQUEsQ0FBQUEsU0FBQUEsRUFBQUEsSUFBQUEsQ0FDUSxVQUFBLEdBQUEsRUFBUztBQUNiSSxZQUFBQSxHQUFBQSxDQUFBQSxHQUFBQTtBQUNBSixTQUFBQSxHQUFBQTtBQUhKQSxHQUFBQSxFQUFBQSxLQUFBQSxDQUtTLFVBQUEsR0FBQSxFQUFTO0FBQ2RJLFlBQUFBLEdBQUFBLENBQUFBLEdBQUFBO0FBQ0FKLFNBQUFBLEdBQUFBO0FBUEpBLEdBQUFBO0FBRkYsQ0FBQTs7QUFhQUEsS0FBQUEsRUFBQUEsQ0FBQUEsUUFBQUEsRUFBa0IsWUFBTTtBQUN0QkksVUFBQUEsR0FBQUEsQ0FBQUEsd0JBQUFBO0FBQ0FGLFVBQUFBLElBQUFBLENBQUFBLENBQUFBO0FBRkZGLENBQUFBOztBQUtBUSxPQUFBQSxPQUFBQSxHQUFpQjtBQUNmSCxzQkFEZSxrQkFBQTtBQUVmRSxvQkFBQUE7QUFGZSxDQUFqQkM7O0FBS0FWLFFBQUFBLGVBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBQb29sIH0gPSByZXF1aXJlKCdwZycpO1xuY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XG5cbmRvdGVudi5jb25maWcoKTtcblxuY29uc3QgcG9vbCA9IG5ldyBQb29sKHtcbiAgY29ubmVjdGlvblN0cmluZzogcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMXG59KTtcblxucG9vbC5vbignY29ubmVjdCcsICgpID0+IHtcbiAgY29uc29sZS5sb2coJ2RhdGFiYXNlIGlzIGNvbm5lY3RlZCBub3cnKTtcbn0pO1xuXG4vKipcbiAqIENyZWF0ZSB1c2VyIFRhYmxlc1xuICovXG5jb25zdCBjcmVhdGVPZmZpY2VUYWJsZXMgPSAoKSA9PiB7XG4gIGNvbnN0IHF1ZXJ5VGV4dCA9XG4gICAgYENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTXG4gICAgICBvZmZpY2UoXG4gICAgICAgIGlkIFVVSUQgUFJJTUFSWSBLRVkgTk9UIE5VTEwsXG4gICAgICAgIG5hbWUgVkFSQ0hBUigxMjgpIE5PVCBOVUxMLFxuICAgICAgICB0eXBlIFZBUkNIQVIoMTI4KSBOT1QgTlVMTCxcbiAgICAgICAgY3JlYXRlZF9kYXRlIFRJTUVTVEFNUFxuICAgICAgKWA7XG5cbiAgcG9vbC5xdWVyeShxdWVyeVRleHQpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgIHBvb2wuZW5kKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIHBvb2wuZW5kKCk7XG4gICAgfSk7XG59XG5cbi8qKlxuICogRHJvcCBUYWJsZXNcbiAqL1xuY29uc3QgZHJvcE9mZmljZVRhYmxlcyA9ICgpID0+IHtcbiAgY29uc3QgcXVlcnlUZXh0ID0gJ0RST1AgVEFCTEUgSUYgRVhJU1RTIG9mZmljZSc7XG4gIHBvb2wucXVlcnkocXVlcnlUZXh0KVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICBwb29sLmVuZCgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICBwb29sLmVuZCgpO1xuICAgIH0pO1xufVxuXG5wb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdUYWJsZSByY3JlYXRpb24gZXhpdGVkJyk7XG4gIHByb2Nlc3MuZXhpdCgwKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY3JlYXRlT2ZmaWNlVGFibGVzLFxuICBkcm9wT2ZmaWNlVGFibGVzXG59O1xuXG5yZXF1aXJlKCdtYWtlLXJ1bm5hYmxlJyk7Il19