'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _cors = require('cors');

var _cors2 = _interopRequireDefault(_cors);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _bodyParser = require('body-parser');

var _bodyParser2 = _interopRequireDefault(_bodyParser);

var _officeCtr = require('./controllers/officeCtr');

var _officeCtr2 = _interopRequireDefault(_officeCtr);

var _userCtr = require('./controllers/userCtr');

var _userCtr2 = _interopRequireDefault(_userCtr);

var _partyCtr = require('./controllers/partyCtr');

var _partyCtr2 = _interopRequireDefault(_partyCtr);

var _candidatesCtr = require('./controllers/candidatesCtr');

var _candidatesCtr2 = _interopRequireDefault(_candidatesCtr);

var _votesCtr = require('./controllers/votesCtr');

var _votesCtr2 = _interopRequireDefault(_votesCtr);

var _tokenAuth = require('./helper/tokenAuth');

var _tokenAuth2 = _interopRequireDefault(_tokenAuth);

var _verifyAdmin = require('./helper/verifyAdmin');

var _verifyAdmin2 = _interopRequireDefault(_verifyAdmin);

var _userAuth = require('./helper/userAuth');

var _userAuth2 = _interopRequireDefault(_userAuth);

var _allowCors = require('./helper/allowCors');

var _allowCors2 = _interopRequireDefault(_allowCors);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var app = (0, _express2.default)(); // import { json, urlencoded } from 'body-parser';


app.use((0, _cors2.default)());

app.use('*', function (req, res, next) {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'PUT, GET, POST, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Content-Type');
  next();
});

app.use(_express2.default.static(_path2.default.join(__dirname)));
app.use('/styles', _express2.default.static(__dirname + '../../UI/styles'));
app.use('/images', _express2.default.static(__dirname + '../../UI/images'));
app.use('/scripts', _express2.default.static(__dirname + '../../UI/scripts'));
app.use('/views', _express2.default.static(__dirname + '../../UI/views'));

app.use(_bodyParser2.default.json());
app.use(_bodyParser2.default.urlencoded({
  extended: true
}));

app.use(_express2.default.json());
var port = process.env.PORT || 3000;

// homepage
app.get('/', function (req, res) {
  res.sendFile(_path2.default.join(__dirname + '../../UI/views/index.html'));
});

app.get('/api/v1', function (req, res) {
  return res.status(200).send({
    status: 200,
    message: 'Welcome to POLITICO'
  });
});
// admin: create, edit
app.post('/api/v1/parties', _tokenAuth2.default.verifyToken, _verifyAdmin2.default.verifyIsAdmin, _partyCtr2.default.create);

app.patch('/api/v1/parties/:id/name', _tokenAuth2.default.verifyToken, _verifyAdmin2.default.verifyIsAdmin, _partyCtr2.default.update);

app.delete('/api/v1/parties/:id', _tokenAuth2.default.verifyToken, _verifyAdmin2.default.verifyIsAdmin, _partyCtr2.default.delete);

app.post('/api/v1/offices', _tokenAuth2.default.verifyToken, _verifyAdmin2.default.verifyIsAdmin, _officeCtr2.default.create);

app.post('/api/v1/office/:userid/register', _tokenAuth2.default.verifyToken, _verifyAdmin2.default.verifyIsAdmin, _userAuth2.default.validateUserId, _candidatesCtr2.default.register);

app.get('/api/v1/users', _tokenAuth2.default.verifyToken, _verifyAdmin2.default.verifyIsAdmin, _userAuth2.default.validateUserId, _userCtr2.default.getAllUsers);

// user
app.get('/api/v1/parties', _tokenAuth2.default.verifyToken, _partyCtr2.default.getParties);

app.get('/api/v1/parties/:id', _tokenAuth2.default.verifyToken, _partyCtr2.default.getAParty);

app.get('/api/v1/offices', _allowCors2.default.allowCors, _tokenAuth2.default.verifyToken, _officeCtr2.default.getAllOffices);

app.get('/api/v1/offices/:id', _tokenAuth2.default.verifyToken, _officeCtr2.default.getOneOffice);

app.post('/api/v1/votes', _tokenAuth2.default.verifyToken, _votesCtr2.default.votes);

app.get('/api/v1/office/:officeid/result', _tokenAuth2.default.verifyToken, _officeCtr2.default.officeResult);

app.get('/api/v1/candidates', _allowCors2.default.allowCors, _tokenAuth2.default.verifyToken, _candidatesCtr2.default.getAllCandidates);

// user login
app.post('/api/v1/auth/signup', _userCtr2.default.createUser);

app.post('/api/v1/auth/login', _userCtr2.default.login);

// user/admin logout
app.post('/api/v1/auth/signout', _tokenAuth2.default.verifyToken, _userCtr2.default.signout);

app.get('/', function (req, res) {
  return res.status(200).send({
    status: 200,
    message: 'Welcome to POLITICO'
  });
});

// Handle 404: send an 404 error page
// app.use(function(req, res) {
//   res.status(404).sendFile(path.join(__dirname + '../../UI/views/404.html'));
// });

// Handle 500: send a 500 error
// app.use(function(error, req, res, next) {
//   res.status(500).sendFile(path.join(__dirname + '../../UI/views/500.html'));
// });

app.all('*', function (req, res) {
  res.status(404).send({
    status: 404,
    error: 'Resource not found on the server'
  });
});

app.listen(port, function () {
  console.log('app is running on port ' + port);
});

exports.default = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJyZXEiLCJyZXMiLCJuZXh0IiwiaGVhZGVyIiwiZXhwcmVzcyIsInN0YXRpYyIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwiYm9keVBhcnNlciIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJnZXQiLCJzZW5kRmlsZSIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwicG9zdCIsInRva2VuIiwidmVyaWZ5VG9rZW4iLCJ2ZXJpZnlBZG1pbiIsInZlcmlmeUlzQWRtaW4iLCJwYXJ0eUN0ciIsImNyZWF0ZSIsInBhdGNoIiwidXBkYXRlIiwiZGVsZXRlIiwiT2ZmaWNlIiwidmVyaWZ5SWQiLCJ2YWxpZGF0ZVVzZXJJZCIsImNhbmRpZGF0ZUN0ciIsInJlZ2lzdGVyIiwidXNlckN0ciIsImdldEFsbFVzZXJzIiwiZ2V0UGFydGllcyIsImdldEFQYXJ0eSIsImFsbG93Q29ycyIsImdldEFsbE9mZmljZXMiLCJnZXRPbmVPZmZpY2UiLCJ2b3Rlc0N0ciIsInZvdGVzIiwib2ZmaWNlUmVzdWx0IiwiZ2V0QWxsQ2FuZGlkYXRlcyIsImNyZWF0ZVVzZXIiLCJsb2dpbiIsInNpZ25vdXQiLCJhbGwiLCJlcnJvciIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFHQSxJQUFNQSxNQUFNLHdCQUFaLEMsQ0FoQkE7OztBQWtCQUEsSUFBSUMsR0FBSixDQUFRLHFCQUFSOztBQUVBRCxJQUFJQyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FB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ZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsganNvbiwgdXJsZW5jb2RlZCB9IGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBPZmZpY2UgZnJvbSAnLi9jb250cm9sbGVycy9vZmZpY2VDdHInO1xuaW1wb3J0IHVzZXJDdHIgZnJvbSAnLi9jb250cm9sbGVycy91c2VyQ3RyJztcbmltcG9ydCBwYXJ0eUN0ciBmcm9tICcuL2NvbnRyb2xsZXJzL3BhcnR5Q3RyJztcbmltcG9ydCBjYW5kaWRhdGVDdHIgZnJvbSAnLi9jb250cm9sbGVycy9jYW5kaWRhdGVzQ3RyJztcbmltcG9ydCB2b3Rlc0N0ciBmcm9tICcuL2NvbnRyb2xsZXJzL3ZvdGVzQ3RyJztcbmltcG9ydCB0b2tlbiBmcm9tICcuL2hlbHBlci90b2tlbkF1dGgnO1xuaW1wb3J0IHZlcmlmeUFkbWluIGZyb20gJy4vaGVscGVyL3ZlcmlmeUFkbWluJztcbmltcG9ydCB2ZXJpZnlJZCBmcm9tICcuL2hlbHBlci91c2VyQXV0aCc7XG5pbXBvcnQgYWxsb3dDb3JzIGZyb20gJy4vaGVscGVyL2FsbG93Q29ycyc7XG5cblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGNvcnMoKSk7XG5cbmFwcC51c2UoJyonLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcbiAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsICdQVVQsIEdFVCwgUE9TVCwgREVMRVRFLCBPUFRJT05TJyk7XG4gIHJlcy5oZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnLCAnQ29udGVudC1UeXBlJyk7XG4gIG5leHQoKTtcbn0pO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUpKSk7XG5hcHAudXNlKCcvc3R5bGVzJywgZXhwcmVzcy5zdGF0aWMoYCR7X19kaXJuYW1lICB9Li4vLi4vVUkvc3R5bGVzYCkpO1xuYXBwLnVzZSgnL2ltYWdlcycsIGV4cHJlc3Muc3RhdGljKGAke19fZGlybmFtZSAgfS4uLy4uL1VJL2ltYWdlc2ApKTtcbmFwcC51c2UoJy9zY3JpcHRzJywgZXhwcmVzcy5zdGF0aWMoYCR7X19kaXJuYW1lICB9Li4vLi4vVUkvc2NyaXB0c2ApKTtcbmFwcC51c2UoJy92aWV3cycsIGV4cHJlc3Muc3RhdGljKGAke19fZGlybmFtZSAgfS4uLy4uL1VJL3ZpZXdzYCkpO1xuXG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe1xuICBleHRlbmRlZDogdHJ1ZSxcbn0pKTtcblxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xuXG4vLyBob21lcGFnZVxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSArICcuLi8uLi9VSS92aWV3cy9pbmRleC5odG1sJykpO1xufSk7XG5cbmFwcC5nZXQoJy9hcGkvdjEnLCAocmVxLCByZXMpID0+IHJlcy5zdGF0dXMoMjAwKS5zZW5kKHtcbiAgc3RhdHVzOiAyMDAsXG4gIG1lc3NhZ2U6ICdXZWxjb21lIHRvIFBPTElUSUNPJyxcbn0pKTtcbi8vIGFkbWluOiBjcmVhdGUsIGVkaXRcbmFwcC5wb3N0KFxuICAnL2FwaS92MS9wYXJ0aWVzJyxcbiAgdG9rZW4udmVyaWZ5VG9rZW4sXG4gIHZlcmlmeUFkbWluLnZlcmlmeUlzQWRtaW4sXG4gIHBhcnR5Q3RyLmNyZWF0ZSxcbik7XG5cbmFwcC5wYXRjaChcbiAgJy9hcGkvdjEvcGFydGllcy86aWQvbmFtZScsXG4gIHRva2VuLnZlcmlmeVRva2VuLFxuICB2ZXJpZnlBZG1pbi52ZXJpZnlJc0FkbWluLFxuICBwYXJ0eUN0ci51cGRhdGUsXG4pO1xuXG5hcHAuZGVsZXRlKFxuICAnL2FwaS92MS9wYXJ0aWVzLzppZCcsXG4gIHRva2VuLnZlcmlmeVRva2VuLFxuICB2ZXJpZnlBZG1pbi52ZXJpZnlJc0FkbWluLFxuICBwYXJ0eUN0ci5kZWxldGUsXG4pO1xuXG5hcHAucG9zdChcbiAgJy9hcGkvdjEvb2ZmaWNlcycsXG4gIHRva2VuLnZlcmlmeVRva2VuLFxuICB2ZXJpZnlBZG1pbi52ZXJpZnlJc0FkbWluLFxuICBPZmZpY2UuY3JlYXRlLFxuKTtcblxuYXBwLnBvc3QoXG4gICcvYXBpL3YxL29mZmljZS86dXNlcmlkL3JlZ2lzdGVyJyxcbiAgdG9rZW4udmVyaWZ5VG9rZW4sXG4gIHZlcmlmeUFkbWluLnZlcmlmeUlzQWRtaW4sXG4gIHZlcmlmeUlkLnZhbGlkYXRlVXNlcklkLFxuICBjYW5kaWRhdGVDdHIucmVnaXN0ZXIsXG4pO1xuXG5hcHAuZ2V0KFxuICAnL2FwaS92MS91c2VycycsXG4gIHRva2VuLnZlcmlmeVRva2VuLFxuICB2ZXJpZnlBZG1pbi52ZXJpZnlJc0FkbWluLFxuICB2ZXJpZnlJZC52YWxpZGF0ZVVzZXJJZCxcbiAgdXNlckN0ci5nZXRBbGxVc2Vycyxcbik7XG5cblxuLy8gdXNlclxuYXBwLmdldChcbiAgJy9hcGkvdjEvcGFydGllcycsXG4gIHRva2VuLnZlcmlmeVRva2VuLFxuICBwYXJ0eUN0ci5nZXRQYXJ0aWVzLFxuKTtcblxuYXBwLmdldChcbiAgJy9hcGkvdjEvcGFydGllcy86aWQnLFxuICB0b2tlbi52ZXJpZnlUb2tlbixcbiAgcGFydHlDdHIuZ2V0QVBhcnR5LFxuKTtcblxuYXBwLmdldChcbiAgJy9hcGkvdjEvb2ZmaWNlcycsXG4gIGFsbG93Q29ycy5hbGxvd0NvcnMsXG4gIHRva2VuLnZlcmlmeVRva2VuLFxuICBPZmZpY2UuZ2V0QWxsT2ZmaWNlcyxcbik7XG5cbmFwcC5nZXQoXG4gICcvYXBpL3YxL29mZmljZXMvOmlkJyxcbiAgdG9rZW4udmVyaWZ5VG9rZW4sXG4gIE9mZmljZS5nZXRPbmVPZmZpY2UsXG4pO1xuXG5hcHAucG9zdChcbiAgJy9hcGkvdjEvdm90ZXMnLFxuICB0b2tlbi52ZXJpZnlUb2tlbixcbiAgdm90ZXNDdHIudm90ZXMsXG4pO1xuXG5hcHAuZ2V0KFxuICAnL2FwaS92MS9vZmZpY2UvOm9mZmljZWlkL3Jlc3VsdCcsXG4gIHRva2VuLnZlcmlmeVRva2VuLFxuICBPZmZpY2Uub2ZmaWNlUmVzdWx0LFxuKTtcblxuYXBwLmdldChcbiAgJy9hcGkvdjEvY2FuZGlkYXRlcycsXG4gIGFsbG93Q29ycy5hbGxvd0NvcnMsXG4gIHRva2VuLnZlcmlmeVRva2VuLFxuICBjYW5kaWRhdGVDdHIuZ2V0QWxsQ2FuZGlkYXRlcyxcbik7XG5cbi8vIHVzZXIgbG9naW5cbmFwcC5wb3N0KFxuICAnL2FwaS92MS9hdXRoL3NpZ251cCcsXG4gIHVzZXJDdHIuY3JlYXRlVXNlcixcbik7XG5cbmFwcC5wb3N0KFxuICAnL2FwaS92MS9hdXRoL2xvZ2luJyxcbiAgdXNlckN0ci5sb2dpbixcbik7XG5cbi8vIHVzZXIvYWRtaW4gbG9nb3V0XG5hcHAucG9zdChcbiAgJy9hcGkvdjEvYXV0aC9zaWdub3V0JyxcbiAgdG9rZW4udmVyaWZ5VG9rZW4sXG4gIHVzZXJDdHIuc2lnbm91dCxcbik7XG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHJlcy5zdGF0dXMoMjAwKS5zZW5kKHtcbiAgc3RhdHVzOiAyMDAsXG4gIG1lc3NhZ2U6ICdXZWxjb21lIHRvIFBPTElUSUNPJyxcbn0pKTtcblxuLy8gSGFuZGxlIDQwNDogc2VuZCBhbiA0MDQgZXJyb3IgcGFnZVxuLy8gYXBwLnVzZShmdW5jdGlvbihyZXEsIHJlcykge1xuLy8gICByZXMuc3RhdHVzKDQwNCkuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSArICcuLi8uLi9VSS92aWV3cy80MDQuaHRtbCcpKTtcbi8vIH0pO1xuXG4vLyBIYW5kbGUgNTAwOiBzZW5kIGEgNTAwIGVycm9yXG4vLyBhcHAudXNlKGZ1bmN0aW9uKGVycm9yLCByZXEsIHJlcywgbmV4dCkge1xuLy8gICByZXMuc3RhdHVzKDUwMCkuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSArICcuLi8uLi9VSS92aWV3cy81MDAuaHRtbCcpKTtcbi8vIH0pO1xuXG5hcHAuYWxsKCcqJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5zdGF0dXMoNDA0KS5zZW5kKHtcbiAgICBzdGF0dXM6IDQwNCxcbiAgICBlcnJvcjogJ1Jlc291cmNlIG5vdCBmb3VuZCBvbiB0aGUgc2VydmVyJyxcbiAgfSk7XG59KTtcblxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBhcHAgaXMgcnVubmluZyBvbiBwb3J0ICR7cG9ydH1gKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iXX0=