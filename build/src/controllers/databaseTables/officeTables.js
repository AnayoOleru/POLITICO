'use strict';

var _require = require('pg'),
    Pool = _require.Pool;

var dotenv = require('dotenv');

dotenv.config();

var pool = new Pool({
  connectionString: process.env.DATABASE_URL
});

pool.on('connect', function () {
  console.log('database is connected now');
});

/**
 * Create user Tables
 */
var createOfficeTables = function createOfficeTables() {
  var queryText = 'CREATE TABLE IF NOT EXISTS\n      office(\n        id UUID PRIMARY KEY NOT NULL,\n        name VARCHAR(128) NOT NULL,\n        type VARCHAR(128) NOT NULL,\n        created_date TIMESTAMP\n      )';

  pool.query(queryText).then(function (res) {
    console.log(res);
    pool.end();
  }).catch(function (err) {
    console.log(err);
    pool.end();
  });
};

/**
 * Drop Tables
 */
var dropOfficeTables = function dropOfficeTables() {
  var queryText = 'DROP TABLE IF EXISTS office';
  pool.query(queryText).then(function (res) {
    console.log(res);
    pool.end();
  }).catch(function (err) {
    console.log(err);
    pool.end();
  });
};

pool.on('remove', function () {
  console.log('Table rcreation exited');
  process.exit(0);
});

module.exports = {
  createOfficeTables: createOfficeTables,
  dropOfficeTables: dropOfficeTables
};

require('make-runnable');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb250cm9sbGVycy9kYXRhYmFzZVRhYmxlcy9vZmZpY2VUYWJsZXMuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsIlBvb2wiLCJkb3RlbnYiLCJjb25maWciLCJwb29sIiwiY29ubmVjdGlvblN0cmluZyIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJvbiIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGVPZmZpY2VUYWJsZXMiLCJxdWVyeVRleHQiLCJxdWVyeSIsInRoZW4iLCJyZXMiLCJlbmQiLCJjYXRjaCIsImVyciIsImRyb3BPZmZpY2VUYWJsZXMiLCJleGl0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7ZUFBaUJBLFFBQVEsSUFBUixDO0lBQVRDLEksWUFBQUEsSTs7QUFDUixJQUFNQyxTQUFTRixRQUFRLFFBQVIsQ0FBZjs7QUFFQUUsT0FBT0MsTUFBUDs7QUFFQSxJQUFNQyxPQUFPLElBQUlILElBQUosQ0FBUztBQUNwQkksb0JBQWtCQyxRQUFRQyxHQUFSLENBQVlDO0FBRFYsQ0FBVCxDQUFiOztBQUlBSixLQUFLSyxFQUFMLENBQVEsU0FBUixFQUFtQixZQUFNO0FBQ3ZCQyxVQUFRQyxHQUFSLENBQVksMkJBQVo7QUFDRCxDQUZEOztBQUlBOzs7QUFHQSxJQUFNQyxxQkFBcUIsU0FBckJBLGtCQUFxQixHQUFNO0FBQy9CLE1BQU1DLGlOQUFOOztBQVNBVCxPQUFLVSxLQUFMLENBQVdELFNBQVgsRUFDR0UsSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiTixZQUFRQyxHQUFSLENBQVlLLEdBQVo7QUFDQVosU0FBS2EsR0FBTDtBQUNELEdBSkgsRUFLR0MsS0FMSCxDQUtTLFVBQUNDLEdBQUQsRUFBUztBQUNkVCxZQUFRQyxHQUFSLENBQVlRLEdBQVo7QUFDQWYsU0FBS2EsR0FBTDtBQUNELEdBUkg7QUFTRCxDQW5CRDs7QUFxQkE7OztBQUdBLElBQU1HLG1CQUFtQixTQUFuQkEsZ0JBQW1CLEdBQU07QUFDN0IsTUFBTVAsWUFBWSw2QkFBbEI7QUFDQVQsT0FBS1UsS0FBTCxDQUFXRCxTQUFYLEVBQ0dFLElBREgsQ0FDUSxVQUFDQyxHQUFELEVBQVM7QUFDYk4sWUFBUUMsR0FBUixDQUFZSyxHQUFaO0FBQ0FaLFNBQUthLEdBQUw7QUFDRCxHQUpILEVBS0dDLEtBTEgsQ0FLUyxVQUFDQyxHQUFELEVBQVM7QUFDZFQsWUFBUUMsR0FBUixDQUFZUSxHQUFaO0FBQ0FmLFNBQUthLEdBQUw7QUFDRCxHQVJIO0FBU0QsQ0FYRDs7QUFhQWIsS0FBS0ssRUFBTCxDQUFRLFFBQVIsRUFBa0IsWUFBTTtBQUN0QkMsVUFBUUMsR0FBUixDQUFZLHdCQUFaO0FBQ0FMLFVBQVFlLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FIRDs7QUFLQUMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmWCx3Q0FEZTtBQUVmUTtBQUZlLENBQWpCOztBQUtBcEIsUUFBUSxlQUFSIiwiZmlsZSI6Im9mZmljZVRhYmxlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUG9vbCB9ID0gcmVxdWlyZSgncGcnKTtcbmNvbnN0IGRvdGVudiA9IHJlcXVpcmUoJ2RvdGVudicpO1xuXG5kb3RlbnYuY29uZmlnKCk7XG5cbmNvbnN0IHBvb2wgPSBuZXcgUG9vbCh7XG4gIGNvbm5lY3Rpb25TdHJpbmc6IHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTFxufSk7XG5cbnBvb2wub24oJ2Nvbm5lY3QnLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdkYXRhYmFzZSBpcyBjb25uZWN0ZWQgbm93Jyk7XG59KTtcblxuLyoqXG4gKiBDcmVhdGUgdXNlciBUYWJsZXNcbiAqL1xuY29uc3QgY3JlYXRlT2ZmaWNlVGFibGVzID0gKCkgPT4ge1xuICBjb25zdCBxdWVyeVRleHQgPVxuICAgIGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUU1xuICAgICAgb2ZmaWNlKFxuICAgICAgICBpZCBVVUlEIFBSSU1BUlkgS0VZIE5PVCBOVUxMLFxuICAgICAgICBuYW1lIFZBUkNIQVIoMTI4KSBOT1QgTlVMTCxcbiAgICAgICAgdHlwZSBWQVJDSEFSKDEyOCkgTk9UIE5VTEwsXG4gICAgICAgIGNyZWF0ZWRfZGF0ZSBUSU1FU1RBTVBcbiAgICAgIClgO1xuXG4gIHBvb2wucXVlcnkocXVlcnlUZXh0KVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICBwb29sLmVuZCgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICBwb29sLmVuZCgpO1xuICAgIH0pO1xufVxuXG4vKipcbiAqIERyb3AgVGFibGVzXG4gKi9cbmNvbnN0IGRyb3BPZmZpY2VUYWJsZXMgPSAoKSA9PiB7XG4gIGNvbnN0IHF1ZXJ5VGV4dCA9ICdEUk9QIFRBQkxFIElGIEVYSVNUUyBvZmZpY2UnO1xuICBwb29sLnF1ZXJ5KHF1ZXJ5VGV4dClcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgcG9vbC5lbmQoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgcG9vbC5lbmQoKTtcbiAgICB9KTtcbn1cblxucG9vbC5vbigncmVtb3ZlJywgKCkgPT4ge1xuICBjb25zb2xlLmxvZygnVGFibGUgcmNyZWF0aW9uIGV4aXRlZCcpO1xuICBwcm9jZXNzLmV4aXQoMCk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZU9mZmljZVRhYmxlcyxcbiAgZHJvcE9mZmljZVRhYmxlc1xufTtcblxucmVxdWlyZSgnbWFrZS1ydW5uYWJsZScpOyJdfQ==